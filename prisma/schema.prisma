// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @map("user_id") @db.ObjectId
  type              String
  provider          String
  providerAccountId String  @map("provider_account_id")
  refresh_token     String? @db.String
  access_token      String? @db.String
  id_token          String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id") @db.ObjectId
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model User {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  email    String?   @unique
  password String
  accounts Account[]
  sessions Session[]

  @@map("users")
}

model Brand {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  name        String    @unique
  description String?
  slug        String    @unique
  mapped_ids  Int[]
  available   Boolean
  products    Product[]

  @@map("brands")
}

model Product {
  id              String  @id @default(auto()) @map("_id") @db.ObjectId
  vendor_id       Int     @unique
  sku             String  @unique
  price           Float
  wholesale_price Float
  available       Boolean
  brand           Brand   @relation(fields: [brandId], references: [id])
  brandId         String  @db.ObjectId
  name            String
  description     String?
  features        Json
  department      String?
  category        String?
  subcategory     String?
  subcategoryId   String? @db.ObjectId
  images          Json
  sizes           Json
  status          Int
  updated_at      Float?
  created_at      Float?

  @@map("products")
}

model Order {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  cart_products Json
  amount        Float?
  name          String?
  email         String
  street        String?
  city          String?
  state         String?
  postalCode    String?
  country       String?
  paid          Boolean
  updated_at    DateTime?
  created_at    DateTime  @default(now())

  @@map("orders")
}

model Newsletter {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  department String
  email      String?   @unique
  updated_at DateTime?
  created_at DateTime  @default(now())

  @@map("newsletter-subscribers")
}
